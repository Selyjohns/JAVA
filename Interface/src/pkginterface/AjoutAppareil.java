/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pkginterface;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;

/**
 *
 * @author 21105905
 */
public class AjoutAppareil extends javax.swing.JFrame {

    /**
     * Creates new form AjoutAppareils
     */
    public AjoutAppareil() {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelAddSalle = new javax.swing.JLabel();
        jLabelNomAppareil = new javax.swing.JLabel();
        AjoutApp_TextNom = new javax.swing.JTextField();
        jLabelDescriptionSalle = new javax.swing.JLabel();
        jLabelNomOS = new javax.swing.JLabel();
        AjoutApp_ListVersionOS = new javax.swing.JComboBox();
        AjoutApp_ButtonValider = new javax.swing.JToggleButton();
        AjoutApp_ListOS = new javax.swing.JComboBox();
        jLabelLocalAppareil = new javax.swing.JLabel();
        AjoutApp_ListSalle = new javax.swing.JComboBox();
        AjoutApp_ButtonQuitter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelAddSalle.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabelAddSalle.setText("Ajout d'un appareil");

        jLabelNomAppareil.setText("Nom :");

        AjoutApp_TextNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjoutApp_TextNomActionPerformed(evt);
            }
        });

        jLabelDescriptionSalle.setText("Systeme Exploitation :");

        jLabelNomOS.setText("Version de l'OS :");

        AjoutApp_ListVersionOS.setEnabled(false);
        AjoutApp_ListVersionOS.setModel(new DefaultComboBoxModel());
        DefaultComboBoxModel dcbmAjoutAppVersionOS = (DefaultComboBoxModel)AjoutApp_ListVersionOS.getModel();
        try {
            Connexion co = new Connexion();
            Statement statement = co.connect();
            String req = "SELECT version FROM os";
            ResultSet rst = statement.executeQuery(req);

            while(rst.next())
            {
                dcbmAjoutAppVersionOS.addElement(rst.getString("version"));
            }

        }
        catch (Exception ex) {
            System.out.println(ex.getMessage());
        }

        AjoutApp_ButtonValider.setText("Valider");
        AjoutApp_ButtonValider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AjoutApp_ButtonValiderMouseClicked(evt);
            }
        });
        AjoutApp_ButtonValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjoutApp_ButtonValiderActionPerformed(evt);
            }
        });

        AjoutApp_ListOS.setModel(new DefaultComboBoxModel());
        DefaultComboBoxModel dcbmAjoutAppOS = (DefaultComboBoxModel)AjoutApp_ListOS.getModel();
        try {
            Connexion co = new Connexion();
            Statement statement = co.connect();
            String req = "SELECT nom FROM OS";
            ResultSet rst = statement.executeQuery(req);
            dcbmAjoutAppOS.addElement("Aucun OS");
            while(rst.next())
            {
                dcbmAjoutAppOS.addElement(rst.getString("nom"));
            }

        }
        catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        AjoutApp_ListOS.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                AjoutApp_ListOSItemStateChanged(evt);
            }
        });
        AjoutApp_ListOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjoutApp_ListOSActionPerformed(evt);
            }
        });

        jLabelLocalAppareil.setText("Salle :");

        AjoutApp_ListSalle.setModel(new DefaultComboBoxModel());
        DefaultComboBoxModel dcbmAjoutAppSalles = (DefaultComboBoxModel)AjoutApp_ListSalle.getModel();
        try {
            Connexion co = new Connexion();
            Statement statement = co.connect();
            String req = "SELECT nom FROM salles";
            ResultSet rst = statement.executeQuery(req);

            while(rst.next())
            {
                dcbmAjoutAppSalles.addElement(rst.getString("nom"));
            }

        }
        catch (Exception ex) {
            System.out.println(ex.getMessage());
        }

        AjoutApp_ButtonQuitter.setText("Annuler");
        AjoutApp_ButtonQuitter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AjoutApp_ButtonQuitterMouseClicked(evt);
            }
        });
        AjoutApp_ButtonQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjoutApp_ButtonQuitterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNomOS)
                    .addComponent(jLabelAddSalle)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNomAppareil)
                            .addComponent(jLabelDescriptionSalle)
                            .addComponent(jLabelLocalAppareil))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AjoutApp_ButtonValider, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AjoutApp_ListVersionOS, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AjoutApp_ListOS, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AjoutApp_TextNom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AjoutApp_ListSalle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(AjoutApp_ButtonQuitter))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelAddSalle, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabelNomAppareil))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AjoutApp_TextNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLocalAppareil)
                    .addComponent(AjoutApp_ListSalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDescriptionSalle, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AjoutApp_ListOS, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNomOS)
                    .addComponent(AjoutApp_ListVersionOS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(AjoutApp_ButtonValider)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AjoutApp_ButtonQuitter)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AjoutApp_ButtonValiderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AjoutApp_ButtonValiderMouseClicked
        // TODO add your handling code here:
        setVisible(false);
        //Quitter fenetre
    }//GEN-LAST:event_AjoutApp_ButtonValiderMouseClicked

    private void AjoutApp_ListOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjoutApp_ListOSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AjoutApp_ListOSActionPerformed

    private void AjoutApp_TextNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjoutApp_TextNomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AjoutApp_TextNomActionPerformed

    private void AjoutApp_ButtonQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjoutApp_ButtonQuitterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AjoutApp_ButtonQuitterActionPerformed

    private void AjoutApp_ButtonQuitterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AjoutApp_ButtonQuitterMouseClicked
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_AjoutApp_ButtonQuitterMouseClicked

    private void AjoutApp_ButtonValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjoutApp_ButtonValiderActionPerformed
        // TODO add your handling code here:
        try{
            Connexion co = new Connexion();
            String req = "SELECT idos FROM os WHERE nom = '"+AjoutApp_ListOS.getSelectedItem().toString()+"'";
            ResultSet rst = co.connect().executeQuery(req);
            rst.next();
            String reqSalle = "SELECT idsalle FROM salles WHERE nom = '"+AjoutApp_ListSalle.getSelectedItem().toString()+"'";
            ResultSet rstSalle = co.connect().executeQuery(reqSalle);
            rstSalle.next();
            String Query = "INSERT INTO appareils (nom, idsalle, idos) VALUES ('"+AjoutApp_TextNom.getText()+"','"+rstSalle.getInt("idsalle")+"','"+rst.getInt("idos")+"')";
            co.connect().execute(Query);
            
            JOptionPane.showMessageDialog(null, "ok");
            
             }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex.toString());}
    }//GEN-LAST:event_AjoutApp_ButtonValiderActionPerformed

    private void AjoutApp_ListSalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjoutApp_ListSalleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AjoutApp_ListSalleActionPerformed

    private void AjoutApp_ListOSItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_AjoutApp_ListOSItemStateChanged
        // TODO add your handling code here:
        AjoutApp_ListVersionOS.setEnabled(true);
        
    }//GEN-LAST:event_AjoutApp_ListOSItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AjoutAppareil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AjoutAppareil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AjoutAppareil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AjoutAppareil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AjoutAppareil().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AjoutApp_ButtonQuitter;
    private javax.swing.JToggleButton AjoutApp_ButtonValider;
    private javax.swing.JComboBox AjoutApp_ListOS;
    private javax.swing.JComboBox AjoutApp_ListSalle;
    private javax.swing.JComboBox AjoutApp_ListVersionOS;
    private javax.swing.JTextField AjoutApp_TextNom;
    private javax.swing.JLabel jLabelAddSalle;
    private javax.swing.JLabel jLabelDescriptionSalle;
    private javax.swing.JLabel jLabelLocalAppareil;
    private javax.swing.JLabel jLabelNomAppareil;
    private javax.swing.JLabel jLabelNomOS;
    // End of variables declaration//GEN-END:variables
}
